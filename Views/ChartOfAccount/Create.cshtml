@model ChartOfAccountCreateViewModel
<style>
    .select-label {
        position: absolute;
        left: 18px;
        top: -5px;
        font-size: 12px;
        line-height: 14px;
        padding: 0px 7px;
    }

    .light-theme .select-label {
        background-color: #fff;
        color: #4D5156;
    }

    .dark-theme .select-label {
        background-color: #2F3349;
        color: #fff;
    }

    #select-label-container select {
        width: 100%;
        padding: 18px;
        padding-right: 38px; /* Increase right padding to make space for the arrow */
        border-radius: 30px;
        font-size: 16px;
        line-height: 24px;
        box-shadow: 1px 1px 4px 0px #7A7A7A40;
        appearance: none; /* Remove default arrow */
        -webkit-appearance: none; /* Remove default arrow in Safari */
        -moz-appearance: none; /* Remove default arrow in Firefox */
        background-image: url('assets/images/down-arrow.svg');
        background-repeat: no-repeat;
        background-position: right 18px center; /* Position the custom arrow 10px from the right edge */
        background-size: 20px 20px;
    }


    .light-theme #select-label-container select {
        background-color: #fff;
        color: #4D5156;
        border: 1px solid #4B465C29;
    }

    .dark-theme #select-label-container select {
        background-color: #2F3349;
        color: #fff;
        border: 1px solid #FFFFFF52;
    }

    #select-label-container select option {
        padding: 10px;
        background-color: #ffffff;
        color: #4D5156;
    }



    #select-label-container select {
        appearance: none; /* For modern browsers */
        -webkit-appearance: none; /* For WebKit-based browsers */
        -moz-appearance: none; /* For Firefox */
    }

        #select-label-container select:focus {
            border: 1px solid #1abc9c; /* Apply border on focus */
            outline: none; /* Prevent default focus outline */
        }



        #select-label-container select option:checked {
            background-color: #1abc9c;
            color: #ffffff;
        }

    .floating_custom_error {
        border-color: red;
    }

    .req-star {
        color: red;
    }

    .field-validation-error {
        color: red;
        font-size: 12px;
        position: absolute;
        left: 15px;
    }


    .custom_floating_input_field::placeholder {
        opacity: 0;
        transition: opacity 0.2s ease;
    }

    .custom_floating_input_field:focus::placeholder {
        opacity: 1;
    }

    .custom_input_container {
        position: relative;
        margin: 0px 0px 28px 0px;
        width: 100%;
    }

    .custom_floating_input_field {
        font-size: 16px;
        padding: 18px;
        display: block;
        width: 100%;
        border-radius: 30px;
        background: transparent;
        outline: none;
        transition: all 0.2s ease;
        box-shadow: 1px 1px 4px 0px #7A7A7A40;
        max-width: -webkit-fill-available;
    }

    .custom_floating_input_field {
        border: 1px solid #4B465C29;
        color: #4D5156;
    }



        .custom_floating_input_field:focus {
            border: 1px solid #1abc9c;
            border-radius: 30px;
        }

            .custom_floating_input_field:focus ~ .custom_floating_label .icons svg,
            .custom_floating_input_field:not(:placeholder-shown) ~ .custom_floating_label .icons svg {
                width: 16px;
                height: 16px;
            }

            .custom_floating_input_field:focus ~ .custom_floating_label,
            .custom_floating_input_field:not(:placeholder-shown) ~ .custom_floating_label {
                top: -7px;
                font-size: 12px;
                color: #6A6678;
            }


    .custom_floating_label {
        font-size: 16px;
        font-weight: normal;
        position: absolute;
        pointer-events: none;
        left: 15px;
        top: 19px;
        transition: all 0.2s ease;
        background: white;
        padding: 0 5px;
    }


    .custom_floating_label {
        background: white;
        color: #999;
    }

    .custom_floating_label_dev {
        display: flex;
        align-items: center;
        gap: 6px;
    }

    .custom_forgot_password {
        margin-top: 24px;
        margin-bottom: 24px;
        font-size: 16px;
        line-height: 24px;
        color: #1abc9c;
        text-align: end;
    }


    .custom_submit_button {
        font-size: 22px;
        width: 100%;
        border-radius: 30px;
        line-height: 26px;
        padding-top: 17px;
        padding-bottom: 17px;
        color: #FFFFFF;
        border: none;
        background-color: #1abc9c;
        box-shadow: 1px 1px 4px 0px #1abc9c40;
    }



    #custom_submit_submit:focus {
        outline: none;
        border: none;
    }

    .custome-floating_form_parent {
        background-color: #fff;
        box-shadow: 0px 4px 18px 0px #4B465C1A;
        padding: 40px 32px;
        border-radius: 24px;
        width: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
    }


    .custom_floating_select_field {
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        padding-right: 2rem;
        background-image: url('/icons/down-arrow-icon.svg');
        background-repeat: no-repeat;
        background-position: right 0.75rem center;
        background-size: 12px;
    }

</style>

<div style="display:flex; flex-direction:column; margin-top: 10px; overflow-y: auto; height: 100%;">
    <form asp-action="Create" method="post" id="create_account_form" novalidate style="max-width: 495px; margin:auto;" class="custome-floating_form_parent">
        @Html.AntiForgeryToken()
        <h2 style="margin-bottom: 40px;">Chart Of Account create</h2>
        <div class="" style="width: 100%;">

            <div class="custom_input_container ">
                <input asp-for="AccountHead" class="custom_floating_input_field" placeholder="" required />
                <span asp-validation-for="AccountHead" class="text-danger"></span>
                <label asp-for="AccountHead" class="custom_floating_label">
                    <div class="custom_floating_label_dev">
                        Account Head<span class="req-star">*</span>
                    </div>
                </label>
            </div>


            <div id="select-label-container" style="margin-bottom:28px;" class="ParentId-container">
                <div style="position: relative;">
                    <label asp-for="ParentId" class="select-label" style="background-color:white; color:#6A6678; font-size:12px;">
                        Parent Head
                    </label>
                    <select asp-for="ParentId" class="custom_floating_input_field custom_floating_select_field">
                        <option value="" disabled selected>Select Parent</option>
                        @foreach (var parent in Model.ParentList)
                        {
                            <option value="@parent.Value">@parent.Text</option>
                        }
                    </select>
                    <span asp-validation-for="ParentId"></span>
                </div>
            </div>



            <div class="custom_input_container " id="CodeContainer">
                <input asp-for="Code" class="custom_floating_input_field" placeholder="" required />
                <span asp-validation-for="Code"></span>
                <label asp-for="Code" class="custom_floating_label">
                    <div class="custom_floating_label_dev">
                       Code <span class="req-star">*</span>
                    </div>
                </label>
            </div>


            <div class="custom_input_container">
                <label asp-for="Description"></label>
                <textarea asp-for="Description" class="custom_floating_input_field" rows="3" placeholder="Enter Description"></textarea>
                <span asp-validation-for="Description" ></span>
            </div>



            <div style="display:flex; justify-content:space-between">
                <div class="custom_input_container form-check">
                    <label asp-for="IsLastLevel" class="form-check-label"> Is Last Level</label>
                    <input asp-for="IsLastLevel" class="form-check-input" required />
                </div>

                <div class="custom_input_container form-check">
                    <label asp-for="IsParent" class="form-check-label">Is Parent</label>
                    <input asp-for="IsParent" class="form-check-input" checked />
                </div>
            </div>

            <div class="w-full">
                <button type="submit" id="custom_submit_submit" class="custom_submit_button">
                    Submit
                </button>
            </div>
       </div>
    </form>
</div>


<script>
    var list = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ParentList.ToList()));
    console.log("list", list)
    const isLastLevel = document.getElementById("IsLastLevel");
    const isParent = document.getElementById("IsParent");

    isLastLevel.addEventListener("change", function() {
      if (this.checked) {
        isParent.checked = false;
      }
    });

    isParent.addEventListener("change", function() {
      if (this.checked) {
        isLastLevel.checked = false;
      }
    });

    document.querySelector("select[name='ParentId']").addEventListener("change", function () {
        var parentId = this.value;
        GetACCode(parentId);
    });

    function GetACCode(parentId){
        fetch(`/ChartOfAccount/GetNextAccountCode?parentId=${parentId}`)
            .then(response => response.json())
            .then(data => {
                document.getElementById("Code").value = data.code;
            });
    }

    function getQueryParams() {
      const params = new URLSearchParams(window.location.search);
      const id = params.get('id');
      return id;
    }

    function fetchAccountById(id) {
    fetch(`/ChartOfAccount/GetChartOfAccountById?id=${id}`)
        .then(response => {
            if (!response.ok) throw new Error("Data not found");
            return response.json();
        })
        .then(data => {
            console.log(data)
                const parentSelect = document.getElementById("ParentId");
                for (let i = 0; i < parentSelect.options.length; i++) {
                        if (parentSelect.options[i].value == data.id) {
                        parentSelect.options[i].selected = true;
                        GetACCode(data.id);
                }

            }

        })
        .catch(error => {
            console.error("Error fetching account:", error);
        });
    }

    // Usage
    const getQueryParamsId = getQueryParams();
    if(getQueryParamsId){
        fetchAccountById(getQueryParamsId)
    }
</script>