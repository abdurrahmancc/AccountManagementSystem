@model RolePermissionsViewModel

@{
    ViewData["Title"] = "Role Permission Management";
}

<h2 class="mb-4">Role Permission Management</h2>

<div class="card mb-4">
    <div class="card-header">
        <h5>Add / Edit Role Permission</h5>
    </div>
    <div class="card-body">
        <form id="rolePermissionForm" class="row g-3">
            <input type="hidden" id="Id" name="Id" value="0" />

            <div class="col-md-4">
                <label for="PageName" class="form-label">Page Name</label>
                <select id="PageName" name="PageName" class="form-select" required>
                    <option value="">-- Select Page --</option>
                    @foreach (var info in ViewBag.Pages as List<AccountManagementSystem.Models.ApplicationPageModel>)
                    {
                        <option value="@info.PageName">@info.PageName</option>
                    }
                </select>
            </div>

            <div class="col-md-4">
                <label for="RoleId" class="form-label">Role</label>
                <select id="RoleId" name="RoleId" class="form-select" required>
                    <option value="">-- Select Role --</option>
                    @foreach (var role in ViewData["Roles"] as List<RoleModel>)
                    {
                        <option value="@role.RoleId">@role.RoleName</option>
                    }
                </select>
            </div>

            <div class="col-12 d-flex align-items-center">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="IsAllowed" name="IsAllowed" />
                    <label class="form-check-label" for="IsAllowed">Is Allowed</label>
                </div>
            </div>

            <div class="col-12">
                <button type="submit" class="btn btn-primary me-2">Save</button>
                <button type="button" class="btn btn-secondary" id="btnClear">Clear</button>
            </div>
        </form>
    </div>
</div>

<h3>Role Permission List</h3>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Role</th>
            <th>Page Name</th>
            <th>Is Allowed</th>
            <th>Created At</th>
            <th>Updated By</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @{
            var rolePermissions = ViewBag.RolePermissions as List<RolePermissionModel>;
            var roles = ViewBag.Roles as List<RoleModel>;
        }

        @if (rolePermissions != null && roles != null)
        {
            for (int i = 0; i < rolePermissions.Count; i++)
            {
                var item = rolePermissions[i];
                <tr data-id="@item.Id"
                    data-roleid="@item.RoleId"
                    data-pagename="@item.PageName"
                    data-isallowed="@item.IsAllowed.ToString().ToLower()"
                    data-updatedby="@item.UpdatedBy">
                    <td>
                        @roles.FirstOrDefault(r => r.RoleId == item.RoleId)?.RoleName
                    </td>
                    <td>@item.PageName</td>
                    <td>@(item.IsAllowed ? "Yes" : "No")</td>
                    <td>@item.CreatedAt.ToString("yyyy-MM-dd")</td>
                    <td>@item.UpdatedBy</td>
                    <td>
                        <button type="button" class="btn btn-sm btn-primary btnEdit">Edit</button>
                        <button type="button" class="btn btn-sm btn-danger btnDelete">Delete</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr><td colspan="6">No data found.</td></tr>
        }

    </tbody>
</table>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(function () {
            $('#rolePermissionForm').submit(function (e) {
                e.preventDefault();

                var formData = {
                    Id: parseInt($('#Id').val()),
                    RoleId: $('#RoleId').val(),
                    PageName: $('#PageName').val(),
                    IsAllowed: $('#IsAllowed').is(':checked'),
                    UpdatedBy: $('#UpdatedBy').val(),
                    CreatedAt: new Date().toISOString()
                };

                $.ajax({
                    url: '@Url.Action("Save", "RolePermission")',
                    type: 'POST',
                    data: formData,
                    success: function (res) {
                        location.reload();
                    },
                    error: function () {
                        alert('Error saving data');
                    }
                });
            });

            $('#btnClear').click(function () {
                $('#Id').val(0);
                $('#RoleId').val('');
                $('#PageName').val('');
                $('#IsAllowed').prop('checked', false);
                $('#UpdatedBy').val('');
            });

            $('.btnEdit').click(function () {
                var tr = $(this).closest('tr');
                $('#Id').val(tr.data('id'));
                $('#RoleId').val(tr.data('roleid'));
                $('#PageName').val(tr.data('pagename'));
                $('#IsAllowed').prop('checked', tr.data('isallowed'));
                $('#UpdatedBy').val(tr.data('updatedby'));
            });

            $('.btnDelete').click(function () {
                if (!confirm('Are you sure to delete this record?')) return;

                var id = $(this).closest('tr').data('id');

                $.ajax({
                    url: '@Url.Action("Delete", "RolePermission")',
                    type: 'POST',
                    data: { id: id },
                    success: function () {
                        location.reload();
                    },
                    error: function () {
                        alert('Error deleting record');
                    }
                });
            });
        });
    </script>
}
